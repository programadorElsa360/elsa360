# Generated by Django 4.0.5 on 2022-07-05 20:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PhysicExerciseDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exercise_type', models.CharField(choices=[('FS', 'Full stretch'), ('TS', 'Training stretch'), ('FT', 'Full body training'), ('UT', 'Upper body training'), ('LT', 'Lower body training'), ('CT', 'Core body training')], default='TS', max_length=2)),
                ('activities', models.CharField(max_length=250)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tier', models.CharField(choices=[('BG', 'Beginner'), ('IM', 'Intermediate'), ('AV', 'Advanced')], default='BG', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionsToPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(choices=[('MA', 'Male'), ('FE', 'Female')], default='MA', max_length=2)),
                ('sports_level', models.CharField(choices=[('BG', 'Beginner'), ('IM', 'Intermediate'), ('AV', 'Advanced')], default='BG', max_length=2)),
                ('sports_goal', models.CharField(choices=[('PM', 'Performance'), ('HS', 'Health / Social')], default='HS', max_length=2)),
            ],
            options={
                'unique_together': {('gender', 'sports_level', 'sports_goal')},
            },
        ),
        migrations.CreateModel(
            name='PhysicPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('week', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(limit_value=4)])),
                ('gym_training_time', models.FloatField()),
                ('gym_training_intensity', models.IntegerField(choices=[(3, 'Gym light'), (4, 'Gym moderate'), (6, 'Gym strong')], default=3)),
                ('exercise_descriptions', models.ManyToManyField(to='training_plans.physicexercisedescription')),
                ('training_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training_plans.trainingplan')),
                ('variables', models.ManyToManyField(to='training_plans.questionstoplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CyclingPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('week', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=4)])),
                ('cycling_training_time', models.FloatField()),
                ('cycling_training_intensity', models.IntegerField(choices=[(4, 'Very light'), (6, 'Light'), (8, 'Moderate'), (10, 'Strong')], default=4)),
                ('cycling_training_percentage', models.CharField(default='LIBRE', max_length=20)),
                ('cycling_competition_time', models.FloatField(blank=True, null=True)),
                ('cycling_competition_level', models.IntegerField(blank=True, choices=[(12, 'Amateur competition'), (14, 'Intermediate competition'), (16, 'Advanced competition')], null=True)),
                ('series', models.IntegerField()),
                ('series_rest_time', models.FloatField()),
                ('exercise_description', models.TextField()),
                ('repetitions', models.IntegerField()),
                ('repetition_time', models.FloatField()),
                ('repetition_rest_time', models.FloatField()),
                ('return_calm', models.FloatField()),
                ('warming', models.CharField(blank=True, max_length=20, null=True)),
                ('training_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training_plans.trainingplan')),
                ('variables', models.ManyToManyField(to='training_plans.questionstoplan')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
