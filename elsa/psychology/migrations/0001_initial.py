# Generated by Django 4.0.5 on 2022-07-05 20:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BorghEffortScale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=112)),
                ('intensity', models.CharField(choices=[('E_S', 'Very, very soft'), ('V_S', 'Very soft'), ('S', 'Soft'), ('S_H', 'Somewhat hard'), ('H', 'Hard'), ('E_H', 'Very, very hard')], default='S', max_length=3)),
                ('lower_rpe', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('higher_rpe', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BorghSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HamiltonAnxietyQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(14)])),
                ('answer', models.IntegerField(choices=[(0, 'Absent'), (1, 'Mild'), (2, 'Moderate'), (3, 'Grave'), (4, 'Incapacitating')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HamiltonSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MoodStateProfileEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feeling', models.CharField(choices=[('FD', 'Friendly'), ('TE', 'Tense'), ('AN', 'Angry'), ('WR', 'Worn'), ('UH', 'Unhappy'), ('HH', 'Hot headed'), ('DY', 'Dynamic'), ('CF', 'Confused'), ('SR', 'Sorry'), ('TR', 'Trembling'), ('AP', 'Apathetic'), ('FU', 'Furious'), ('CN', 'Considered'), ('SA', 'Sad'), ('AC', 'Active'), ('NR', 'Nervous'), ('GR', 'Grumpy'), ('BL', 'Blue'), ('EN', 'Energetic'), ('PA', 'Panicked'), ('HL', 'Hopeless'), ('RE', 'Relaxed'), ('UW', 'Unworthy'), ('ML', 'Malicious'), ('SP', 'Sympathetic'), ('HT', 'Hard to handle'), ('RT', 'Restless'), ('UC', 'Unable to concentrate'), ('FA', 'Fatigued'), ('US', 'Useful'), ('UP', 'Upset'), ('DC', 'Discouraged'), ('RS', 'Resentful'), ('AL', 'Alone'), ('MS', 'Miserable'), ('CO', 'Confusing'), ('HA', 'Happy'), ('BI', 'Bitter'), ('EX', 'Exhausted'), ('AX', 'Anxious'), ('FR', 'Fight-ready'), ('GM', 'Good mood'), ('SO', 'Somber'), ('DE', 'Desperate'), ('SL', 'Slow'), ('RB', 'Rebellious'), ('DL', 'Defenseless'), ('TI', 'Tired'), ('BW', 'Bewildered'), ('AT', 'Alert'), ('CH', 'Cheated'), ('EF', 'Efficient'), ('TW', 'Trustworthy'), ('BM', 'Bad mood'), ('WL', 'Worthless'), ('FG', 'Forgotten'), ('CA', 'Carefree'), ('TF', 'Terrified'), ('GT', 'Guilty'), ('VG', 'Vigorous'), ('UN', 'Uncertain'), ('DR', 'Drained')], default='FD', max_length=2)),
                ('intensity', models.IntegerField(choices=[(0, 'Never'), (1, 'A little'), (2, 'Moderate'), (3, 'Very much'), (4, 'Alot')], default=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PsychologicalQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], default=1)),
                ('week', models.IntegerField()),
                ('number', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PsychologicalSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PsycologicalQuestionAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer_subject', models.CharField(blank=True, max_length=50, null=True)),
                ('string_answer', models.TextField(blank=True, null=True)),
                ('boolean_answer', models.BooleanField(blank=True, null=True)),
                ('frequency_answer', models.IntegerField(blank=True, choices=[(5, 'Almost always'), (4, 'Many times'), (3, 'Sometimes'), (2, 'A few times'), (1, 'Almost never')], null=True)),
                ('intensity_answer', models.IntegerField(blank=True, choices=[(0, 'Never'), (1, 'A little'), (2, 'Moderate'), (3, 'Very much'), (4, 'Alot')], null=True)),
                ('integer_scale_answer', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('qualificative_answer', models.IntegerField(blank=True, choices=[(0, 'Very good'), (1, 'Good'), (2, 'Normal'), (3, 'Regular'), (4, 'Bad')], default=2, null=True)),
                ('agreement_answer', models.IntegerField(blank=True, choices=[(6, 'Total disagreement'), (5, 'Much disagreement'), (4, 'Some disagreement'), (3, 'Some agreement'), (2, 'Much agreement'), (1, 'Total agreement')], default=3, null=True)),
                ('is_positive_agreement', models.BooleanField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='psychology.psychologicalquestion')),
                ('summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='psychology.psychologicalsummary')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
